# Generated by Django 2.2.4 on 2019-09-01 15:56

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='MyUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('gmt_create', models.DateTimeField(auto_now_add=True, verbose_name='gmt create')),
                ('gmt_modified', models.DateTimeField(auto_now=True, verbose_name='gmt modified')),
                ('nick_name', models.CharField(blank=True, max_length=64, null=True, unique=True, verbose_name='用户昵称')),
                ('real_name', models.CharField(blank=True, max_length=64, null=True, verbose_name='真实姓名')),
                ('pic', models.CharField(blank=True, max_length=255, null=True, verbose_name='头像')),
                ('sex', models.IntegerField(choices=[(0, '未知'), (1, '女'), (2, '男')], default=0, verbose_name='性别')),
                ('birth_date', models.DateTimeField(blank=True, null=True, verbose_name='出生年月')),
                ('email', models.EmailField(blank=True, max_length=100, null=True, unique=True, verbose_name='用户邮箱')),
                ('pay_password', models.CharField(blank=True, max_length=64, null=True, verbose_name='支付密码')),
                ('user_mobile', models.CharField(blank=True, max_length=64, null=True, unique=True, verbose_name='手机号码')),
                ('user_regip', models.CharField(blank=True, max_length=64, null=True, verbose_name='注册IP')),
                ('user_lastip', models.CharField(blank=True, max_length=64, null=True, verbose_name='最后登录IP')),
                ('user_memo', models.CharField(blank=True, max_length=64, null=True, verbose_name='备注')),
                ('score', models.IntegerField(default=0, verbose_name='用户积分')),
                ('openid', models.CharField(blank=True, max_length=32, null=True, unique=True, verbose_name='openid')),
                ('unionid', models.CharField(blank=True, max_length=20, null=True, verbose_name='unionid')),
                ('provider', models.CharField(blank=True, max_length=32, null=True, verbose_name='用户来源')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否删除')),
                ('is_admin', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
